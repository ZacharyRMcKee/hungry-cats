{"version":3,"sources":["Components/Card.js","Components/CartItem.js","Components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["displayTime","time","console","log","times","split","hours","minutes","suffix","Product","singleEvent","addToCart","id","style","height","Image","textAlign","width","src","alt","Content","Item","as","size","name","align","cost","day_of_week","date","toString","replace","time_start","time_end","overflowY","location","Trigger","Menu","onClick","description","CartItem","product","going","amount","removeFromCart","subtitle","sku","rounded","ShoppingCart","i","cartInfoContent","contents","length","content","push","Group","multiline","map","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","App","useState","data","cartActive","setCart","cartInfo","setCartInfo","eventList","setEvents","filteredList","setFilter","activeDay","setDay","activeCost","setCost","activeTime","setTime","useEffect","ref","on","snapshot","val","inCart","productId","renderUpdate","set","value","useRenderUpdate","events","Object","values","filteredEvents","id2product","addCartItem","index","timeToMins","hrnmins","Number","meal","filterItems","day","filter","event","paddingTop","fixed","paddingLeft","paddingRight","Brand","fontSize","color","icon","faUtensils","state","active","Background","Cart","Close","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4219fb56.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'rbx/index.css';\r\nimport { Card, Dropdown, Button, Content, Media, Title, Level } from 'rbx';\r\n\r\n\r\nconst displayTime = (time) => {\r\n    console.log(time)\r\n    const times = time.split(\":\");\r\n    let hours = times[0] > 12 ? times[0] - 12 : times[0];\r\n    hours = (hours == '00') ? 12 : hours\r\n    const minutes = times[1];\r\n    const suffix = times[0] >= 12 ? 'PM' : 'AM';\r\n    console.log(hours)\r\n    return hours + \":\" + minutes + \" \" + suffix;\r\n}\r\n\r\n\r\n\r\nconst Product = ({ singleEvent, addToCart }) => {\r\n    return (\r\n        <Card id=\"eventcard\" style = {{height: '720px'}}>\r\n            <Card.Image>\r\n                <div style={{ textAlign: 'center', width: '100%' }}>\r\n                    <img src={`./data/events/${singleEvent.id}.jpg`} alt='' id=\"eventpic\" />\r\n                </div>\r\n            </Card.Image>\r\n            <Card.Content>\r\n                <Media>\r\n                    <Media.Item>\r\n                        <Title as=\"p\" size={6}>\r\n                            {singleEvent.name}\r\n                        </Title>\r\n                        <Level>\r\n                          <Level.Item align=\"left\">\r\n                            <b>Cost: </b> {singleEvent.cost}\r\n                          </Level.Item>\r\n                      </Level>\r\n                      <Level>\r\n                        <Level.Item align=\"left\">\r\n                          <b>Date: </b>  {singleEvent.day_of_week},  {(singleEvent.date).toString().replace(/_/g,\"/\")}\r\n                        </Level.Item>\r\n                      </Level>\r\n                      <Level>\r\n                        <Level.Item align=\"left\">\r\n                          <b>Time: </b> {displayTime(singleEvent.time_start)} - {displayTime(singleEvent.time_end)}\r\n                        </Level.Item>\r\n                      </Level>\r\n                      <Content align=\"left\" style = {{overflowY : 'auto', height:'72px', width: '100%'}}>\r\n                          <b>Location:</b> {singleEvent.location}\r\n                      </Content>\r\n                    </Media.Item>\r\n\r\n                    <Media.Item as=\"figure\" align=\"left\">\r\n                        <Dropdown>\r\n                            <Dropdown.Trigger>\r\n                                <Button>\r\n                                    <span>Going?</span>\r\n                                </Button>\r\n                            </Dropdown.Trigger>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Content>\r\n                                <Dropdown.Item onClick={ () => addToCart(singleEvent.id, 'Going') }> Going </Dropdown.Item>\r\n                                <Dropdown.Item> Not Going </Dropdown.Item>\r\n                                </Dropdown.Content>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </Media.Item>\r\n                </Media>\r\n                <Content style = {{overflowY : 'auto', height:'70px'}}>\r\n                    {singleEvent.description}\r\n                </Content>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport 'rbx/index.css';\r\nimport { Card, Button, Content, Media, Title } from 'rbx';\r\n\r\nconst CartItem = ({ product, going, amount, removeFromCart }) => {\r\n  return (\r\n    <Card>\r\n      <Card.Image>\r\n        <div style={{ textAlign: 'center', width: '100%' }}>\r\n          <img src={`./data/events/${product.id}.jpg`} alt='' />\r\n        </div>\r\n      </Card.Image>\r\n      <Card.Content>\r\n        <Media>\r\n          <Media.Item as=\"figure\" align=\"left\">\r\n            <Button>\r\n              <span>{going}</span>\r\n            </Button>\r\n          </Media.Item>\r\n          <Media.Item>\r\n            <Title as=\"p\" size={6}>\r\n              {product.name}\r\n            </Title>\r\n            <Title as=\"p\" subtitle size={6}>\r\n              {product.date}\r\n            </Title>\r\n          </Media.Item>\r\n        </Media>\r\n        <Content>\r\n          {(amount===1) ? amount+\" person is going\" : amount+\" people are going\"}\r\n        </Content>\r\n        <Content>\r\n          {product.location}\r\n        </Content>\r\n        <Button onClick={() => { removeFromCart(product.sku, going); }\r\n        } rounded>\r\n          Remove\r\n          </Button>\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport 'rbx/index.css';\r\nimport { Title, Column, Container } from 'rbx';\r\nimport CartItem from './CartItem';\r\n\r\nconst ShoppingCart = ({ cartInfoContent, removeFromCart }) => {\r\n    const contents = [];\r\n    let i;\r\n    for (i = 0; i < cartInfoContent.length; i += 1) {\r\n        const content = cartInfoContent[i];\r\n        const product = content.product;\r\n        if (content['Going'] !== 0) {\r\n            contents.push([product, 'Going', content['Going']]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>My Events</Title>\r\n            <Column.Group multiline>\r\n                <Column size='full'>\r\n                </Column>\r\n                {contents.map(content =>\r\n                    <Column size='full' key={content[0].id}>\r\n                        <CartItem product={content[0]} going={content[1]} amount={content[2]} removeFromCart={removeFromCart} />\r\n                    </Column>\r\n                )}\r\n            </Column.Group>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ShoppingCart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport 'rbx/index.css';\r\nimport { Column, Container, Navbar, Button, Icon, Modal, Box, Dropdown } from 'rbx';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUtensils } from '@fortawesome/free-solid-svg-icons';\r\nimport Product from './Components/Card';\r\nimport Cart from './Components/Cart';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBWH38HPQ857TYu82B8wzufC8sK4yMOTco\",\r\n  authDomain: \"hungrycats-ad46c.firebaseapp.com\",\r\n  databaseURL: \"https://hungrycats-ad46c.firebaseio.com\",\r\n  projectId: \"hungrycats-ad46c\",\r\n  storageBucket: \"hungrycats-ad46c.appspot.com\",\r\n  messagingSenderId: \"684059161523\",\r\n  appId: \"1:684059161523:web:225ae9c7b51eaf653b51c6\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.database();\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState({});\r\n  const [cartActive, setCart] = useState(false);\r\n  const [cartInfo, setCartInfo] = useState([]);\r\n  const [inventory, setInventory] = useState({});\r\n  const [eventList, setEvents] = useState({});\r\n  const [filteredList, setFilter] = useState({});\r\n  const [activeDay, setDay] = useState('All Days');\r\n  const [activeCost, setCost] = useState('All Costs');\r\n  const [activeTime, setTime] = useState('All Times');\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const ref = firebase.database().ref('/')\r\n    console.log(ref)\r\n    ref.on('value', (snapshot) =>\r\n    {\r\n      if (snapshot.val()) {\r\n        const data = snapshot.val()\r\n        setEvents(data);\r\n        setFilter(data);\r\n      }\r\n      else\r\n        console.log(\"no data.\")\r\n\r\n    });\r\n    // const fetchInventory = async () => {\r\n    //   const response = await fetch('./data/items.json');\r\n    //   const json = await response.json();\r\n    //   setInventory(json);\r\n    // };\r\n    //\r\n    // fetchInventory();\r\n  }, []);\r\n\r\n  const inCart = (productId) => {\r\n    for (i = 0; i < cartInfo.length; i += 1) {\r\n      if (cartInfo[i].productId === productId) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  const useRenderUpdate = () => {\r\n    const [value, set] = useState(true);\r\n    return () => set(value => !value);\r\n  }\r\n  const renderUpdate = useRenderUpdate();\r\n\r\n  const products = Object.values(data);\r\n\r\n  const events = Object.values(eventList)\r\n\r\n  const filteredEvents = Object.values(filteredList)\r\n\r\n  const id2product = {}\r\n  let i;\r\n  for (i = 0; i < events.length; i += 1) {\r\n    id2product[events[i].id] = events[i];\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const fetchProducts = async () => {\r\n  //     const response = await fetch('./data/products.json');\r\n  //     const json = await response.json();\r\n  //     setData(json);\r\n  //   };\r\n  //   fetchProducts();\r\n  // }, []);\r\n\r\n  const addCartItem = (productId, size) => {\r\n    const index = inCart(productId);\r\n    if (index !== -1) {\r\n      cartInfo[index][size] += 1;\r\n    }\r\n    else {\r\n      cartInfo.push({\r\n        productId: productId,\r\n        product: id2product[productId],\r\n        'Going': 0,\r\n        'Not Going': 0\r\n      });\r\n      cartInfo[cartInfo.length - 1][size] += 1;\r\n    }\r\n    setCartInfo(cartInfo);\r\n    setCart(true);\r\n    renderUpdate();\r\n    {console.log(cartInfo)}\r\n  };\r\n\r\n  const removeCartItem = (productId, size) => {\r\n    const index = inCart(productId);\r\n    if (index !== -1) {\r\n      cartInfo[index][size] = cartInfo[index][size] > 0 ? cartInfo[index][size] - 1 : 0;\r\n    }\r\n    else {\r\n      cartInfo.push({\r\n        productId: productId,\r\n        product: id2product[productId],\r\n        'Going': 0,\r\n        'Not Going': 0\r\n      });\r\n      cartInfo[index][size] = cartInfo[index][size] > 0 ? cartInfo[index][size] - 1 : 0;\r\n    }\r\n    setCartInfo(cartInfo);\r\n    renderUpdate();\r\n  };\r\n\r\n  const timeToMins = (time) => {\r\n    const hrnmins = time.split(\":\")\r\n    return Number(hrnmins[0])*60+Number(hrnmins[1])\r\n  }\r\n\r\n  const meal = (time) => {\r\n    if (timeToMins(time) <= timeToMins(\"10:00\"))\r\n      return 'Breakfast'\r\n    else if (timeToMins(time) >= timeToMins(\"16:00\"))\r\n      return 'Dinner'\r\n    else {\r\n      return 'Lunch'\r\n    }\r\n  }\r\n\r\n  const filterItems = (day, cost, time) => {\r\n    if(day === 'All Days' && cost === 'All Costs' && time == 'All Times')\r\n      setFilter(events)\r\n    else if (cost === 'All Costs' && time === 'All Times') {\r\n      setFilter(events.filter(event => {\r\n        return event.day_of_week === day\r\n        }))\r\n    }\r\n    else if (day === 'All Days' && time == 'All Times') {\r\n      setFilter(events.filter(event => {\r\n        if (cost === 'Free')\r\n          return event.cost === 'Free'\r\n        else\r\n          return event.cost !== 'Free'\r\n      }))\r\n    }\r\n    else if (day === 'All Days' && cost === 'All Costs') {\r\n      setFilter(events.filter(event => {\r\n        return meal(event.time_start) === time\r\n      }))\r\n    }\r\n    else if (time == 'All Times'){\r\n      setFilter(events.filter(event => {\r\n        if (cost === 'Free')\r\n          return event.day_of_week === day && event.cost === 'Free'\r\n        else\r\n          return event.day_of_week === day && event.cost !== 'Free'\r\n      }))\r\n    }\r\n    else if (day == 'All Days'){\r\n      setFilter(events.filter(event => {\r\n        if (cost === 'Free')\r\n          return meal(event.time_start) === time && event.cost === 'Free'\r\n        else\r\n          return meal(event.time_start) === time && event.cost !== 'Free'\r\n      }))\r\n    }\r\n    else if (cost == 'All Costs'){\r\n      setFilter(events.filter(event => {\r\n        return meal(event.time_start) === time && event.day_of_week === day\r\n      }))\r\n    }\r\n    else {\r\n      setFilter(events.filter(event => {\r\n        if (cost === 'Free')\r\n          return meal(event.time_start) === time && event.cost === 'Free' && event.day_of_week === day\r\n        else\r\n          return meal(event.time_start) === time && event.cost !== 'Free' && event.day_of_week === day\r\n      }))\r\n    }\r\n    }\r\n\r\n\r\n  const DayFilter = ({ state }) => {\r\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday', 'All Days']\r\n    return (\r\n      <Dropdown>\r\n        <Dropdown.Trigger>\r\n          <Button>\r\n            <span>{activeDay}</span>\r\n          </Button>\r\n        </Dropdown.Trigger>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Content>\r\n            {days.map(day =>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDay(day)\r\n                  filterItems(day, activeCost, activeTime)\r\n                }}\r\n              >\r\n                {day}\r\n              </Dropdown.Item>\r\n            )}\r\n          </Dropdown.Content>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    )\r\n  }\r\n\r\n  const CostFilter = ({ state }) => {\r\n    const costs = ['Free', 'Not Free', 'All Costs']\r\n    return (\r\n      <Dropdown>\r\n        <Dropdown.Trigger>\r\n          <Button>\r\n            <span>{activeCost}</span>\r\n          </Button>\r\n        </Dropdown.Trigger>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Content>\r\n            {costs.map(cost =>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setCost(cost)\r\n                  filterItems(activeDay, cost, activeTime)\r\n                }}\r\n              >\r\n                {cost}\r\n              </Dropdown.Item>\r\n            )}\r\n          </Dropdown.Content>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    )\r\n  }\r\n\r\n  const TimeFilter = ({ state }) => {\r\n    const times = ['Breakfast', 'Lunch', 'Dinner', 'All Times']\r\n    return (\r\n      <Dropdown>\r\n        <Dropdown.Trigger>\r\n          <Button>\r\n            <span>{activeTime}</span>\r\n          </Button>\r\n        </Dropdown.Trigger>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Content>\r\n            {times.map(time =>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setTime(time)\r\n                  filterItems(activeDay, activeCost, time)\r\n                }}\r\n              >\r\n                {time}\r\n              </Dropdown.Item>\r\n            )}\r\n          </Dropdown.Content>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container as='div' style={{ width: '100%', paddingTop: '20px' }}>\r\n      <Navbar fixed='top' as='div' style={{ paddingLeft: '60px', paddingRight: '50px', paddingTop: '10px' }}>\r\n        <Navbar.Brand>\r\n          <Navbar.Item>\r\n            <h1 style={{ fontSize: '24px' }}><strong>Events</strong></h1>\r\n          </Navbar.Item>\r\n          <Navbar.Item>\r\n            <Button color='black' onClick={() => setCart(true)}>\r\n              <Icon>\r\n                <FontAwesomeIcon icon={faUtensils} />\r\n              </Icon>\r\n            </Button>\r\n          </Navbar.Item>\r\n        </Navbar.Brand>\r\n        <DayFilter />\r\n        <CostFilter />\r\n        <TimeFilter />\r\n      </Navbar>\r\n      <Modal active={cartActive}>\r\n        <Modal.Background />\r\n        <Modal.Content>\r\n          <Box>\r\n            <Cart cartInfoContent={cartInfo} removeFromCart={removeCartItem} />\r\n          </Box>\r\n        </Modal.Content>\r\n        <Modal.Close onClick={() => setCart(false)} />\r\n      </Modal>\r\n      <Column.Group multiline>\r\n        <Column size='full'>\r\n        </Column>\r\n        {filteredEvents.map(singleEvent =>\r\n          <Column size='one-third'>\r\n            <Product singleEvent={singleEvent} addToCart={addCartItem} />\r\n          </Column>\r\n        )}\r\n      </Column.Group>\r\n    </Container>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}